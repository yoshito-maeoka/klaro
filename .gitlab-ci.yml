image: node:latest

# Cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

before_script:
  - npm ci

stages:
  - test
  - build
  - deploy

lint:
  stage: test
  script:
    - npm run-script lint

build:
  stage: deploy
  script:
    - npm run-script make
  artifacts:
    paths:
    - dist

deploy:
  only:
    - staging
    - tags
  stage: deploy
  before_script:
    - apt-get update -qy
    - apt-get install -y rsync
  script:
    # we deploy tagged commits to the production version and commits in the "staging" branch to the staging environment
    - if [ -n "$CI_COMMIT_TAG" ]; then export DIRECTORY=klaro-master; else if [ "$CI_COMMIT_REF_NAME" = "staging" ]; then export DIRECTORY=klaro-staging; else exit 0; fi; fi;
    - if [ ! -n "$SERVER_SSH_KEY" ]; then exit 0; fi
    - mkdir ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SERVER_SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - npm ci
    - export CI_APP_VERSION=$CI_COMMIT_TAG APP_VERSION=$CI_COMMIT_SHA
    - npm run-script make
    - SEPARATE_CSS=1 npm run-script make
    - SEPARATE_CSS=1 NO_MINIFY_CSS=1 npm run-script make
    - echo "Deploying to $DIRECTORY..."
    - if [ -n "$DIRECTORY" ]; then rsync --progress -r -e "ssh -o StrictHostKeyChecking=no -o identityFile=~/.ssh/id_rsa" dist/* $SERVER_USERNAME@$SERVER_IP:/dpkit/$DIRECTORY; fi;
